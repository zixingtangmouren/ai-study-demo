[[["6f5f9f33-5812-4b31-88bc-815f0b47ae7a",{"pageContent":"## CommonTableWithFilter 使用案例\n\n### 配置初始化\n\n通过`IftActions`在全局可以设置 axios 请求、枚举、字典等基础配置。使用方式与表单的一致。","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":1,"to":5}}}}],["45e45b65-c6e3-40a5-90d0-2b44efd86d5d",{"pageContent":"```jsx\nimport React from 'react';\nimport axios from 'axios';\nimport { IftActions } from '@cvte/mes-base';\nwindow.globalUrl = {\n  wmsBiz: 'http://wms-admin-fat.gz.cvte.cn/biz',\n  mfg: 'https://mfg-bsm-test-api.gz.cvte.cn',\n  wmsInv: '//wms-admin-fat.gz.cvte.cn/inv',\n};\nconst axiosConfig = {\n  requestInterceptors: (config) => {\n    // 工厂请求config增加token\n    if (/.*config\\.gz\\.cvte\\.cn|smes-mdprod\\.cvte\\.com/.test(config.url)) {\n      config.headers.common.cmes_info = window.__CMES_INFO_TOKEN__;\n    }\n    return {\n      ...config,\n    };\n  },\n  responseInterceptors: (response) => {\n    const { data = {}, status, config } = response;\n    const {\n      success,\n      Succeed,\n      status: dataStatus,\n      Message: dataErrorMessage,\n      result,\n      data: dataResult,\n      error = {},\n      message,\n    } = data;\n    // 1、有success，根据success来判断是否成功\n    if (success === false) {\n      // 有些接口特殊，错误信息放在Message里面\n      if (Succeed === 0) {\n      } else {\n      }","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":7,"to":43}}}}],["20486dd1-5eaf-4963-a463-ea7c1aece748",{"pageContent":"error = {},\n      message,\n    } = data;\n    // 1、有success，根据success来判断是否成功\n    if (success === false) {\n      // 有些接口特殊，错误信息放在Message里面\n      if (Succeed === 0) {\n      } else {\n      }\n      return Promise.reject(data);\n    }\n    // 2、有status，根据status来判断是否成功\n    if (dataStatus && dataStatus !== '0') {\n      return Promise.reject(data);\n    }\n    return result || dataResult;\n  },\n  responseInterceptorsError: (error) => {\n    const {\n      message: { data } = {},\n      response: {\n        status,\n        message: errorMessage1,\n        data: { message: errorMessage2, data: innerData, error: { message: errorMessage3 = '' } = {} } = {},\n      } = {},\n    } = error;\n    if (axios.isCancel(error)) {\n      return Promise.resolve(data);\n    }\n    // 如果没有的话 则是正常的接口错误 直接返回错误信息给用户\n    if (status === 401) {\n    } else if (status === 403) {\n    } else {\n      let errorMsg = errorMessage1 || errorMessage2 || errorMessage3 || '服务器返回异常，请联系管理员';\n    }\n    return Promise.reject(error);\n  },\n};","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":35,"to":72}}}}],["0b0c2645-1f70-4b3b-b752-1a460c26352a",{"pageContent":"const enumConfig = {\n  enumApiMap: {\n    wmsBiz: {\n      api: '/frontApi/wmsBiz/admin/v1/enum',\n      // 枚举值\n      itemValue: 'code',\n      // 枚举值的翻译\n      itemName: 'name',\n    },\n    // ....其他配置\n  },\n  // 指定默认的枚举接口类型，如果表单配置自己指定的可以覆盖这里全局配置的\n  enumType: 'default',\n  // 格式数据，传入一个值，要返回一个数组\n  enumFormatData: (res) => res,\n  // 全局配置的枚举对象数组\n  enumList: {},\n};\n\nIftActions.init({\n  axiosConfig,\n  enumConfig,\n});\n\nexport default () => {\n  return <div>默认配置，一般在入口main声明</div>;\n};\n```\n\n### 基础使用\n\n`xioo-form` 与 `xioo-table` 与 `btnList的结合`。在最外层传入 name 后，通过 `IftActions`拿到表单表格的实例，此时的表单表格无需指定`name`与`dvProgNo`。","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":74,"to":105}}}}],["f2eb7cde-f005-4f06-b854-e9984164a0f2",{"pageContent":"export default () => {\n  return <div>默认配置，一般在入口main声明</div>;\n};\n```\n\n### 基础使用\n\n`xioo-form` 与 `xioo-table` 与 `btnList的结合`。在最外层传入 name 后，通过 `IftActions`拿到表单表格的实例，此时的表单表格无需指定`name`与`dvProgNo`。\n\n```tsx\nimport React, { useEffect, useState } from 'react';\nimport { Button, ConfigProvider, Switch } from 'antd';\nimport { CommonTableWithFilter, IftActions } from '@cvte/mes-base';\nimport { GlobalCommonContext, getAction } from '@cvte/mes-utils';\nimport type { ITableProps, IFilterFormProps, IBaseBtn } from '@cvte/mes-base/es/CommonTableWithFilter';\nimport zhCN from 'antd/lib/locale-provider/zh_CN';","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":98,"to":113}}}}],["090874d4-7c09-4f9c-8ffe-cc7ac76d6d57",{"pageContent":"export default () => {\n  const [tableConfig, setTableConfig] = useState();\n  const [loaded, setLoaded] = useState<boolean>(false);\n  useEffect(() => {\n    getAction(\n      '/api/tableConfig/getConfig',\n      { tableCode: 'COMMONTABLEWITHFILTER_DEMOS_BASEUSE' },\n      (res: any) => {\n        setTableConfig(res);\n        setLoaded(true);\n      },\n      () => {\n        setLoaded(true);\n      }\n    );\n  }, []);","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":115,"to":130}}}}],["2b5ad8ab-e002-492f-bbcd-aed80773e083",{"pageContent":"const tableProps: ITableProps = {\n    tableInfo: {\n      autoLoad: true,\n      rowKey: 'id',\n      selectType: 'checkbox',\n      columnAlign: 'center',\n      columnsList: [\n        {\n          columnName: '检验类型',\n          headerTooltip: '检验类型的说明',\n          columnNo: 'typeCode',\n          columnType: 'SearchSelect',\n          columnDataUrl: '/frontApi/qmsProd/admin/basic/insp/type/list',\n          itemValue: 'typeCode',\n          itemName: 'typeName',\n          defaultLabelKey: 'typeName',\n          onSearchKeyWord: 'typeName',\n          otherOptionValues: {\n            typeName: 'typeName',\n          },\n          onSearchOtherParams: {\n            inspType: 'PRODUCT',\n          },\n          width: 150,\n          isEdit: true,\n          rules: [{ required: true, message: '检验类型必填' }],\n          isFilter: true,\n          filterConfig: {\n            name: 'typeCode',\n            type: 'Input',\n            filterToApi: true,\n          },\n        },\n        {","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":132,"to":165}}}}],["0e4ad9c0-40f4-4ab6-91e1-1d86cdb79857",{"pageContent":"isFilter: true,\n          filterConfig: {\n            name: 'typeCode',\n            type: 'Input',\n            filterToApi: true,\n          },\n        },\n        {\n          columnName: '工段',\n          columnNo: 'stageCode',\n          columnType: 'Dict',\n          dictType: 'mfgDict',\n          dictCode: 'MFG_QMS_BAS_PROCESS_STAGE',\n          width: 150,\n          isEdit: true,\n        },\n        {\n          columnName: '检验标准名称',\n          columnNo: 'tempName',\n          required: true,\n          columnType: 'Input',\n          width: 200,\n          isEdit: true,\n          rules: [{ required: true, message: '检验标准名称必填' }],\n        },\n        {\n          columnName: () => {\n            return <div>版本名称</div>;\n          },\n          columnNo: 'version',\n          columnNameAlias: '版本名称',\n          isFilter: true,\n          filterConfig: {\n            name: 'version',\n            type: 'Input',\n            filterToApi: true,\n          },\n        },\n        {","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":158,"to":196}}}}],["5da65e9a-a007-47b0-af3a-58335abd6a26",{"pageContent":"isFilter: true,\n          filterConfig: {\n            name: 'version',\n            type: 'Input',\n            filterToApi: true,\n          },\n        },\n        {\n          columnName: '是否',\n          columnNo: 'yesorno',\n          width: 50,\n          columnType: 'Select',\n          itemName: 'itemNameDesc',\n          itemValue: 'boolValue',\n        },\n        {\n          columnName: '选择',\n          columnNo: 'render',\n          render: () => <Switch defaultChecked />,\n          columnWidth: 100,\n          flex: 1,\n        },\n        {\n          columnName: '状态',\n          columnNo: 'stdStatus',\n          columnType: 'Enum',\n          enumCode: 'ProcTemplateInspStdStatusEnum',\n        },\n      ],\n      columnSelectOptions: {\n        yesorno: [\n          {\n            itemName: 'YES',\n            value: 'Y',\n            itemNameDesc: '是',\n            itemValue: '1',\n            desc: '合格',\n            key: true,\n            boolValue: true,\n            activeDesc: '有效',","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":189,"to":228}}}}],["bd66c0e8-3778-4a10-b87e-f61ad459ab8b",{"pageContent":"value: 'Y',\n            itemNameDesc: '是',\n            itemValue: '1',\n            desc: '合格',\n            key: true,\n            boolValue: true,\n            activeDesc: '有效',\n            absoluteDesc: '活跃',\n          },\n          {\n            itemName: 'NO',\n            value: 'N',\n            itemNameDesc: '否',\n            itemValue: '0',\n            desc: '不合格',\n            key: false,\n            boolValue: false,\n            activeDesc: '失效',\n            absoluteDesc: '作废',\n          },\n        ],\n      },\n    },\n    customExportHandler: (p, cb) => {\n      console.log(p);\n      cb();\n    },\n    formatData: (res, cb) => {\n      cb(\n        (res.content || []).map((item: any) => ({\n          ...item,\n          yesorno: true,\n        }))\n      );\n    },\n    tableDescription: `\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":222,"to":261}}}}],["ed9f949b-1dc7-49f5-9cda-2cb8fb4a1b8c",{"pageContent":"},\n    tableDescription: `\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。\n    单个表格的取值逻辑说明很长很长。。。单个表格的取值逻辑说明很长很长。。。`,\n  };","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":256,"to":263}}}}],["d37bd737-ab0d-4edf-bc04-223825c5b7f8",{"pageContent":"const formProps: IFilterFormProps = {\n    fieldGroup: [\n      {\n        key: 'baseInfo',\n        fields: [\n          {\n            label: '用户',\n            placeholder: '输入用户名',\n            type: 'Select',\n            onSearchApi: '/frontApi/mfg/api/v1/mfg_user/all_user',\n            name: 'account',\n            itemName: 'name-account',\n            itemValue: 'id',\n            showSearch: true,\n            onSearchKeyWord: 'keyword',\n            // searchOnFocus: true,\n            // cacheSearchResult: true,\n            // otherOptionValues: {\n            //   lotNo: 'lotNo'\n            // }\n          },\n          {\n            label: 'Reelid',\n            placeholder: '输入Reelid模糊搜索',\n            type: 'Select',\n            onSearchApi: '/frontApi/wmsInv/admin/v1/item_onhand/list/bar/reel_id',\n            name: 'reelId',\n            itemName: 'name',\n            itemValue: 'code',\n            onSearchKeyWord: 'kw',\n            searchOnFocus: true,","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":265,"to":295}}}}],["85cfeee9-9993-494e-acf4-262339f509a6",{"pageContent":"name: 'reelId',\n            itemName: 'name',\n            itemValue: 'code',\n            onSearchKeyWord: 'kw',\n            searchOnFocus: true,\n            cacheSearchResult: true,\n          },\n          {\n            label: '状态',\n            placeholder: '请选择状态',\n            name: 'status',\n            type: 'Dict',\n            dictCode: 'WMS_INV_ONHAND_STATUS',\n          },\n          {\n            label: '需求时间',\n            type: 'RangePicker', // 时间区间选择器\n            name: 'reqTime',\n            startName: 'reqTimeStart', // 开始时间属性\n            endName: 'reqTimeEnd', // 结束时间属性\n            required: false,\n            format: 'YYYY-MM-DD',\n            isFormatToTimeStamp: false, // 是否使用时间戳传值，默认为true\n          },\n        ],\n      },\n    ],\n    optionList: {},\n    initialValues: {\n      status: 'WMS_INV_ONHAND_STATUS_NOT_INSP',\n      reelId: '1050622106700000923',\n      reqTimeStart: new Date().getTime() - 7 * 24 * 60 * 60 * 1000,\n      reqTimeEnd: new Date().getTime(),","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":291,"to":323}}}}],["2534e0c7-b115-4576-8e0d-c03ae0417a8c",{"pageContent":"status: 'WMS_INV_ONHAND_STATUS_NOT_INSP',\n      reelId: '1050622106700000923',\n      reqTimeStart: new Date().getTime() - 7 * 24 * 60 * 60 * 1000,\n      reqTimeEnd: new Date().getTime(),\n    },\n  };","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":320,"to":325}}}}],["d5a69651-1209-4bba-9432-b029839cfb49",{"pageContent":"const filterProps = {\n    searchApi: '/frontApi/qmsProd/admin/basic/proc/template/std/list',\n  };\n\n  const btnList: IBaseBtn[] = [\n    {\n      type: 'primary',\n      text: '新增',\n      key: 'add',\n      disabled: false, // 禁用状态\n      icon: null, // antd icon组件\n      loading: false, // 加载中\n      onClick: () => {\n        IftActions.getTableWithFilter('base').table?.onAddRowItems([]);\n      }, // 点击方法\n    },\n  ];\n\n  const filterRadioGroup = [\n    {\n      options: (['AI', 'DIP', 'SMT', 'PKG', 'PCB', '其它'] || []).map((item) => {\n        return {\n          label: item,\n          value: item,\n        };\n      }),\n      defaultValue: 'AI',\n      key: 'feeTypeTab',\n    },\n  ];","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":327,"to":356}}}}],["2c0134cb-ac3a-4529-ad38-c0af53f4e812",{"pageContent":"return (\n    <ConfigProvider locale={zhCN}>\n      <GlobalCommonContext.Provider\n        value={{\n          userTableConfig: {\n            COMMONTABLEWITHFILTER_DEMOS_BASEUSE: tableConfig,\n          },\n          isAdmin: true,\n        }}\n      >\n        {loaded && (\n          <CommonTableWithFilter\n            name=\"COMMONTABLEWITHFILTER_DEMOS_BASEUSE\"\n            filterProps={filterProps}\n            formProps={formProps}\n            tableProps={tableProps}\n            btnList={btnList}\n            filterRadioGroup={filterRadioGroup}\n          />\n        )}\n        <Button type=\"primary\" onClick={() => console.log(IftActions.getTableWithFilter('base'))}>\n          获取实例\n        </Button>\n      </GlobalCommonContext.Provider>\n    </ConfigProvider>\n  );\n};\n```\n\n### 父子表格\n\n`childTableProps`必须指定`title`，其余参数与单独使用参数一致","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":358,"to":389}}}}],["494374a9-6303-434d-aa10-29a6c0ff04c6",{"pageContent":"### 父子表格\n\n`childTableProps`必须指定`title`，其余参数与单独使用参数一致\n\n```tsx\nimport React from 'react';\nimport { CommonTableWithFilter, IftActions } from '@cvte/mes-base';\nimport type {\n  ITableProps,\n  IFilterFormProps,\n  IBaseBtn,\n  IChildTableProps,\n} from '@cvte/mes-base/es/CommonTableWithFilter';\n\nexport default () => {\n  const tableProps: ITableProps = {\n    tableInfo: {\n      rowKey: 'id',\n      selectType: 'radio',\n      columnAlign: 'center',\n      columnsList: [\n        {\n          columnName: '规则编码',\n          columnNo: 'ruleCode',\n          isEdit: ({ data }) => {\n            return !data.id;\n          },\n          rules: [{ required: true, message: '规则编码必填' }],\n          flex: 1,\n        },\n        {\n          columnName: '规则名称',\n          columnNo: 'ruleName',\n          isEdit: true,\n          rules: [{ required: true, message: '规则名称必填' }],\n          flex: 1,\n        },\n      ],\n      onSelectionChanged: (rows) => {\n        console.log(rows);\n      },\n    },\n  };","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":387,"to":429}}}}],["9ebfb6de-8ebf-4e19-8ff2-b145ebeb66b8",{"pageContent":"const formProps: IFilterFormProps = {\n    fieldGroup: [\n      {\n        key: 'baseInfo',\n        fields: [\n          {\n            label: '规则编码',\n            name: 'ruleCode',\n            type: 'Input',\n          },\n          {\n            label: '规则名称',\n            name: 'ruleName',\n            type: 'Input',\n          },\n        ],\n      },\n    ],\n    optionList: {},\n    initialValues: {\n      status: 'WMS_INV_ONHAND_STATUS_NOT_INSP',\n    },\n  };\n\n  const filterProps = {\n    searchApi: '/frontApi/qmsProd/admin/v1/level/transform/list',\n  };","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":431,"to":457}}}}],["bb90842d-e64e-47a4-ad3c-30d021cedb82",{"pageContent":"const filterProps = {\n    searchApi: '/frontApi/qmsProd/admin/v1/level/transform/list',\n  };\n\n  const btnList: IBaseBtn[] = [\n    {\n      type: 'primary',\n      text: '新增',\n      key: 'add',\n      disabled: false, // 禁用状态\n      icon: null, // antd icon组件\n      loading: false, // 加载中\n      onClick: () => {\n        IftActions.getTableWithFilter('parent').table?.onAddRowItems([]);\n      }, // 点击方法\n    },\n    {\n      text: '删除',\n      key: 'delete',\n      disabled: true,\n      popconfirmProps: {\n        // 使用气泡确认框\n        title: '确定删除？', // 必填，确认文字提示,\n        okText: '确认', // 确认按钮文字,\n        cancelText: '取消', // 取消按钮文字\n      },\n    },\n  ];","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":455,"to":482}}}}],["49e44fdd-c105-4370-a9ec-d61b7863fb0c",{"pageContent":"const childTableProps: IChildTableProps[] = [\n    {\n      name: 'child1',\n      tableProps: {\n        title: '明细1',\n        tableInfo: {\n          rowKey: 'id',\n          selectType: 'checkbox',\n          columnAlign: 'center',\n          columnsList: [\n            {\n              columnNo: 'isInitPhase',\n              columnName: '是否初始阶段',\n              columnType: 'Switch',\n              isEdit: true,\n              flex: 1,\n            },\n            {\n              columnNo: 'phaseTransfer',\n              columnName: '检验严格度转换',\n              columnType: 'Dict',\n              dictType: 'mfgProdDict',\n              dictCode: 'MFG_QMS_BAS_VRC',\n              isEdit: true,\n              rules: [{ required: true, message: '检验严格度转换必填' }],\n              flex: 1,\n            },\n            {\n              columnNo: 'transformCondition',\n              columnName: '规则条件',\n              columnType: 'Dict',\n              dictType: 'mfgProdDict',","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":484,"to":515}}}}],["559b480f-efbd-4b26-b1f4-0ec80d891704",{"pageContent":"},\n            {\n              columnNo: 'transformCondition',\n              columnName: '规则条件',\n              columnType: 'Dict',\n              dictType: 'mfgProdDict',\n              dictCode: 'MFG_QMS_BAS_VRC_RULES',\n              isEdit: true,\n              rules: [{ required: true, message: '规则条件必填' }],\n              flex: 1,\n            },\n          ],\n        },\n      },\n      fatherRowKeyToApi: true,\n      filterProps: {\n        searchApi: '/frontApi/qmsProd/admin/v1/level/transform/line',\n      },\n    },\n    {\n      name: 'child2',\n      title: '明细2',\n      component: (data) => {\n        console.log(data);\n        return <div>1234</div>;\n      },\n      btnList: [\n        {\n          type: 'primary',\n          text: '新增',\n          key: 'add',\n          disabled: false, // 禁用状态\n          icon: null, // antd icon组件\n          loading: false, // 加载中\n          onClick: () => {}, // 点击方法\n        },\n      ],\n    },\n  ];","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":510,"to":548}}}}],["cbcee429-5ec2-4ba2-b896-ee79645fc051",{"pageContent":"return (\n    <CommonTableWithFilter\n      name=\"parent\"\n      filterProps={filterProps}\n      formProps={formProps}\n      tableProps={tableProps}\n      btnList={btnList}\n      childTableProps={childTableProps}\n    />\n  );\n};\n```\n\n### useMfgBtn、useMfgTab\n\n通过 useMfgBtn、useMfgTab 获取按钮和 tab 按钮配置\n\n```tsx\nimport React from 'react';\nimport { CommonTableWithFilter } from '@cvte/mes-base';\nimport type { ITableProps, IFilterFormProps, IChildTableProps } from '@cvte/mes-base/es/CommonTableWithFilter';\nimport { useMfgBtn, useMfgTab } from '@cvte/mes-utils/src/hooks/mfgBtnTagHooks';","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":550,"to":571}}}}],["19370867-e299-4985-aa47-4781c9fb722f",{"pageContent":"export default () => {\n  const [toolBtns, lineBtns] = useMfgBtn(\n    'qms_quality_basic_sub',\n    {\n      add: {\n        type: 'primary',\n        onClick: () => {\n          console.log('新增');\n        },\n      },\n      batch: {\n        disabled: true,\n        onClick: () => {\n          console.log('批量处理');\n        },\n      },\n    },\n    {\n      edit: {\n        // event: 'handleEdit', 当不设置event事件时，从配置中获取\n        type: 'edit',\n        btnCode: 'edit',\n        iconConfig: {\n          code: 'FullscreenExitOutlined',\n        },\n      },\n      delete: {\n        event: 'handleDelete',\n        type: 'delete',\n        btnCode: 'delete',\n      },\n    }\n  );","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":573,"to":605}}}}],["2767c892-14c8-49e3-8514-158f7c3bd4e1",{"pageContent":"const [pageTabs] = useMfgTab(\n    'bsm_sys_config_user_sys_user',\n    {\n      /** 管理租户 */\n      bsm_sys_config_user_sys_user_grant_tenant: {\n        add: {\n          type: 'primary',\n          onClick: () => {},\n        },\n      },\n      /** 角色管理 */\n      bsm_sys_config_user_sys_user_role: {\n        add: {\n          type: 'primary',\n          onClick: () => {},\n        },\n      },\n    },\n    []\n  );","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":607,"to":626}}}}],["bbbd74c2-f988-41d8-a9cc-378e1302c919",{"pageContent":"const tableProps: ITableProps = {\n    tableInfo: {\n      rowKey: 'id',\n      selectType: 'radio',\n      columnAlign: 'center',\n      showSettingColumn: true,\n      columnsList: [\n        {\n          columnName: '规则编码',\n          columnNo: 'ruleCode',\n          isEdit: ({ data }) => {\n            return !data.id;\n          },\n          rules: [{ required: true, message: '规则编码必填' }],\n          flex: 1,\n        },\n        {\n          columnName: '规则名称',\n          columnNo: 'ruleName',\n          isEdit: true,\n          rules: [{ required: true, message: '规则名称必填' }],\n          flex: 1,\n        },\n      ],\n      onSelectionChanged: (rows) => {\n        console.log(rows, 123);\n      },\n    },\n    cellSetting: {\n      width: 60,\n      actionList: lineBtns,\n      actionEvent: {\n        handleEdit: () => {\n          console.log('行编辑');\n        },\n        handleDelete: () => {\n          console.log('行删除');\n        },\n      },\n    },\n  };","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":628,"to":668}}}}],["6c47bafd-6f67-4007-b75d-86adc11ede2b",{"pageContent":"const formProps: IFilterFormProps = {\n    fieldGroup: [\n      {\n        key: 'baseInfo',\n        fields: [\n          {\n            label: '规则编码',\n            name: 'ruleCode',\n            type: 'Input',\n          },\n          {\n            label: '规则名称',\n            name: 'ruleName',\n            type: 'Input',\n          },\n        ],\n      },\n    ],\n    optionList: {},\n    initialValues: {},\n  };\n\n  const filterProps = {\n    searchApi: '/frontApi/qmsProd/admin/v1/level/transform/list',\n  };","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":670,"to":694}}}}],["e209f4cf-6c90-400a-aa6c-97ae2ff88529",{"pageContent":"const childTableProps: IChildTableProps[] = [\n    {\n      name: 'bsm_sys_config_user_sys_user_grant_tenant',\n      tableProps: {\n        title: '管理租户',\n        tableInfo: {\n          rowKey: 'id',\n          columnsList: [\n            {\n              columnNo: 'tenancyNo',\n              columnName: '租户编码',\n              flex: 1,\n            },\n            {\n              columnNo: 'tenantName',\n              columnName: '租户名称',\n              flex: 1,\n            },\n          ],\n          showSettingColumn: true,\n          defaultPageSize: 10,\n        },\n        cellSetting: {\n          width: 60,\n          actionList: pageTabs['bsm_sys_config_user_sys_user_grant_tenant']?.lineBtns || [],\n          actionEvent: {\n            handleDelete: (data: any) => {\n              console.log('管理租户-行删除');\n            },\n          },\n        },\n      },\n      filterProps: {\n        searchApi: '/msys_apis/sys_user/manageTenant/query',\n      },\n      withFatherParams: {\n        userId: 'id',","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":696,"to":732}}}}],["d6d8bf02-f5eb-4285-aa61-ee208bc0b4cb",{"pageContent":"},\n          },\n        },\n      },\n      filterProps: {\n        searchApi: '/msys_apis/sys_user/manageTenant/query',\n      },\n      withFatherParams: {\n        userId: 'id',\n      },\n    },\n    {\n      name: 'bsm_sys_config_user_sys_user_role',\n      tableProps: {\n        title: '角色管理',\n        tableInfo: {\n          rowKey: 'id',\n          columnsList: [\n            {\n              columnNo: 'roleCode',\n              columnName: '编码',\n              flex: 1,\n            },\n            {\n              columnNo: 'roleName',\n              columnName: '名称',\n              flex: 1,\n            },\n            {\n              columnNo: 'roleType',\n              columnName: '类型',\n              flex: 1,\n              columnType: 'Dict',\n              dictCode: 'BSM_ROLE_ROLETYPE',\n              dictType: 'mfgDict',\n            },\n            {\n              columnNo: 'roleSource',\n              columnName: '来源',\n              flex: 1,\n              columnType: 'Dict',","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":724,"to":764}}}}],["f1f71205-da29-4b0b-ad7b-5e92e5310357",{"pageContent":"dictType: 'mfgDict',\n            },\n            {\n              columnNo: 'roleSource',\n              columnName: '来源',\n              flex: 1,\n              columnType: 'Dict',\n              dictCode: 'BSM_ROLE_ROLERELTYPE',\n              dictType: 'mfgDict',\n            },\n          ],\n          showSettingColumn: true,\n        },\n        hasPagination: false,\n        defaultPageSize: 10,\n        cellSetting: {\n          width: 60,\n          actionList: pageTabs['bsm_sys_config_user_sys_user_role']?.lineBtns || [],\n          actionEvent: {\n            handleDelete: (data: any) => {\n              console.log('角色管理-行删除');\n            },\n          },\n        },\n      },\n      filterProps: {\n        searchApi: `/msys_apis/user/2c91d20c5615c055015615c53bb2003e/role`,\n      },\n      withFatherParams: {\n        userId: 'id',\n      },\n    },\n  ]\n    .filter((item) => pageTabs[item.name])\n    .map((pageTab) => ({\n      ...pageTab,","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":758,"to":793}}}}],["b92c1cd5-8d2b-4466-9c5b-1ecdb4fce681",{"pageContent":"},\n      withFatherParams: {\n        userId: 'id',\n      },\n    },\n  ]\n    .filter((item) => pageTabs[item.name])\n    .map((pageTab) => ({\n      ...pageTab,\n      btnList: pageTabs[pageTab.name]?.toolBtns || [],\n    }));","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":785,"to":795}}}}],["d8ff6418-d920-4414-a470-e4ebe87469ca",{"pageContent":"return (\n    <CommonTableWithFilter\n      name=\"parent\"\n      filterProps={filterProps}\n      formProps={formProps}\n      tableProps={tableProps}\n      btnList={toolBtns}\n      childTableProps={childTableProps}\n    />\n  );\n};\n```\n\n### API","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":797,"to":810}}}}],["8818a5a0-bd2d-4ad1-9046-6512f09f70c8",{"pageContent":"### API\n\n| Name             | Description        | Type                                           | Default    |\n| :--------------- | :----------------- | :--------------------------------------------- | :--------- |\n| name             | 名称也是唯一的索引 | `string`                                       | `required` |\n| tableProps       | 表格参数           | [ITableProps](/xioo-ag-table/single-table#api) | `required` |\n| filterProps      | 过滤参数           | [IFilterProps](#IFilterProps)                  | `required` |\n| formProps        | 表单参数           | [IFormProps](/xioo-form/common-form#api)       |\n| btnList          | 按钮列表           | [IBaseBtn[]](/infrastructure/button-list#api)  |\n| generateBtnList  | 自定义按钮         | `() => React.ReactElement`                     |\n| filterRadioGroup | 额外的过滤按钮组   | `(RadioGroupProps & { key: string })[]`        |\n| childTableProps  | 子表               | [IChildTableProps](#IChildTableProps)          |\n\n#### IFilterProps","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":810,"to":823}}}}],["46e3f0c4-dfa1-480f-98c5-dbe64518ea83",{"pageContent":"#### IFilterProps\n\n| Name              | Description    | Type     | Default |\n| :---------------- | :------------- | :------- | :------ |\n| searchApi         | 请求接口       | `string` |\n| filterOtherParams | 请求的其他参数 | `object` |\n\n#### IChildTableProps\n\n| Name              | Description                                                             | Type           | Default |\n| :---------------- | :---------------------------------------------------------------------- | :------------- | :------ |\n| fatherRowKeyToApi | 是否将父的 rowKey 加到请求的 api 上                                     | `boolean`      | `fasle` |\n| withFatherParams  | 额外带上的父的参数, key 是传给后端的 key， value 是父行要取的数据的 key | `[key]: value` |","metadata":{"source":"/Users/tangzhicheng/development/github/ai-study-demo/docs/index.md","loc":{"lines":{"from":823,"to":835}}}}]],{"0":"6f5f9f33-5812-4b31-88bc-815f0b47ae7a","1":"45e45b65-c6e3-40a5-90d0-2b44efd86d5d","2":"20486dd1-5eaf-4963-a463-ea7c1aece748","3":"0b0c2645-1f70-4b3b-b752-1a460c26352a","4":"f2eb7cde-f005-4f06-b854-e9984164a0f2","5":"090874d4-7c09-4f9c-8ffe-cc7ac76d6d57","6":"2b5ad8ab-e002-492f-bbcd-aed80773e083","7":"0e4ad9c0-40f4-4ab6-91e1-1d86cdb79857","8":"5da65e9a-a007-47b0-af3a-58335abd6a26","9":"bd66c0e8-3778-4a10-b87e-f61ad459ab8b","10":"ed9f949b-1dc7-49f5-9cda-2cb8fb4a1b8c","11":"d37bd737-ab0d-4edf-bc04-223825c5b7f8","12":"85cfeee9-9993-494e-acf4-262339f509a6","13":"2534e0c7-b115-4576-8e0d-c03ae0417a8c","14":"d5a69651-1209-4bba-9432-b029839cfb49","15":"2c0134cb-ac3a-4529-ad38-c0af53f4e812","16":"494374a9-6303-434d-aa10-29a6c0ff04c6","17":"9ebfb6de-8ebf-4e19-8ff2-b145ebeb66b8","18":"bb90842d-e64e-47a4-ad3c-30d021cedb82","19":"49e44fdd-c105-4370-a9ec-d61b7863fb0c","20":"559b480f-efbd-4b26-b1f4-0ec80d891704","21":"cbcee429-5ec2-4ba2-b896-ee79645fc051","22":"19370867-e299-4985-aa47-4781c9fb722f","23":"2767c892-14c8-49e3-8514-158f7c3bd4e1","24":"bbbd74c2-f988-41d8-a9cc-378e1302c919","25":"6c47bafd-6f67-4007-b75d-86adc11ede2b","26":"e209f4cf-6c90-400a-aa6c-97ae2ff88529","27":"d6d8bf02-f5eb-4285-aa61-ee208bc0b4cb","28":"f1f71205-da29-4b0b-ad7b-5e92e5310357","29":"b92c1cd5-8d2b-4466-9c5b-1ecdb4fce681","30":"d8ff6418-d920-4414-a470-e4ebe87469ca","31":"8818a5a0-bd2d-4ad1-9046-6512f09f70c8","32":"46e3f0c4-dfa1-480f-98c5-dbe64518ea83"}]